/*
Deployment script for PyrkonData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PyrkonData"
:setvar DefaultFilePrefix "PyrkonData"
:setvar DefaultDataPath "C:\Users\LU\AppData\Local\Microsoft\VisualStudio\SSDT\PyrkonData"
:setvar DefaultLogPath "C:\Users\LU\AppData\Local\Microsoft\VisualStudio\SSDT\PyrkonData"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key cfe8328e-4891-4b9d-8d42-e11ad5d949b5 is skipped, element [dbo].[Funkcje].[Id_] (SqlSimpleColumn) will not be renamed to Id_Funkcji';


GO
PRINT N'Rename refactoring operation with key b497177a-9e5b-4d5f-9a2c-c8be35b1fdf3 is skipped, element [dbo].[Bloki].[Id] (SqlSimpleColumn) will not be renamed to Id_Bloku';


GO
PRINT N'Rename refactoring operation with key 9834d940-7630-46a1-b55c-5fd67e17c012, 728ad1e8-b6a3-45eb-928b-1c9cc3b062d9 is skipped, element [dbo].[Zgłoszenia].[Id] (SqlSimpleColumn) will not be renamed to Id_Zgloszenia';


GO
PRINT N'Rename refactoring operation with key 772aa945-9dd3-458f-8114-7fe2a311626c is skipped, element [dbo].[Prelekcje].[Id] (SqlSimpleColumn) will not be renamed to Id_Prelekcji';


GO
PRINT N'Rename refactoring operation with key b81cce38-82e7-48b4-a74d-4278327ecee7 is skipped, element [dbo].[Rezerwacje_prelekcji].[Id] (SqlSimpleColumn) will not be renamed to Id_Rezerwacji_Prelekcji';


GO
PRINT N'Rename refactoring operation with key 499414c1-00d7-4395-9102-3e50ddf4d08e is skipped, element [dbo].[Sale].[Id] (SqlSimpleColumn) will not be renamed to Id_sali';


GO
PRINT N'Rename refactoring operation with key 3101afc5-0417-4f4c-a47f-13a62dbc7d5c is skipped, element [dbo].[Budynki].[Id] (SqlSimpleColumn) will not be renamed to Id_Budynku';


GO
PRINT N'Rename refactoring operation with key a95cb150-92df-4e7c-82c7-1fd4618c2806 is skipped, element [dbo].[Rezerwacje_gier].[Id] (SqlSimpleColumn) will not be renamed to Id_Rezerwacji_Gry';


GO
PRINT N'Rename refactoring operation with key b968f77b-e93a-4d72-a663-4395fb5d2130 is skipped, element [dbo].[Gry].[Id] (SqlSimpleColumn) will not be renamed to Id_Gry';


GO
PRINT N'Rename refactoring operation with key 3ca30b56-0a58-4df4-a6fc-ffe370c0e1aa is skipped, element [dbo].[Gry].[Nazwa] (SqlSimpleColumn) will not be renamed to Tytul';


GO
PRINT N'Creating [dbo].[Bloki]...';


GO
CREATE TABLE [dbo].[Bloki] (
    [Id_Bloku]      INT           IDENTITY (1, 1) NOT NULL,
    [Nazwa]         VARCHAR (50)  NOT NULL,
    [Opis]          VARCHAR (250) NULL,
    [Id_Uczestnika] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Bloku] ASC),
    UNIQUE NONCLUSTERED ([Nazwa] ASC)
);


GO
PRINT N'Creating [dbo].[Budynki]...';


GO
CREATE TABLE [dbo].[Budynki] (
    [Id_Budynku]         INT           IDENTITY (1, 1) NOT NULL,
    [Nazwa]              VARCHAR (50)  NOT NULL,
    [Adres]              VARCHAR (100) NOT NULL,
    [Godzina_otwarcia]   TIME (7)      NOT NULL,
    [Godzina_zamkniecia] TIME (7)      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Budynku] ASC),
    UNIQUE NONCLUSTERED ([Nazwa] ASC)
);


GO
PRINT N'Creating [dbo].[Funkcje]...';


GO
CREATE TABLE [dbo].[Funkcje] (
    [Id_Funkcji]  INT          IDENTITY (1, 1) NOT NULL,
    [Nazwa]       VARCHAR (50) NOT NULL,
    [Cena_biletu] MONEY        NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Funkcji] ASC)
);


GO
PRINT N'Creating [dbo].[Gry]...';


GO
CREATE TABLE [dbo].[Gry] (
    [Id_Gry]      INT          IDENTITY (1, 1) NOT NULL,
    [Tytul]       VARCHAR (50) NOT NULL,
    [Wydawnictwo] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Gry] ASC)
);


GO
PRINT N'Creating [dbo].[Prelekcje]...';


GO
CREATE TABLE [dbo].[Prelekcje] (
    [Id_Prelekcji]  INT           IDENTITY (1, 1) NOT NULL,
    [Godzina]       SMALLDATETIME NOT NULL,
    [Id_Zgloszenia] INT           NOT NULL,
    [Id_Sali]       INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Prelekcji] ASC)
);


GO
PRINT N'Creating [dbo].[Rezerwacje_gier]...';


GO
CREATE TABLE [dbo].[Rezerwacje_gier] (
    [Id_Rezerwacji_Gry]   INT           IDENTITY (1, 1) NOT NULL,
    [Godzina_rozpoczecia] SMALLDATETIME NOT NULL,
    [Godzina_zakonczenia] SMALLDATETIME NOT NULL,
    [Id_Gry]              INT           NOT NULL,
    [Id_Uczestnika]       INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Rezerwacji_Gry] ASC)
);


GO
PRINT N'Creating [dbo].[Rezerwacje_prelekcji]...';


GO
CREATE TABLE [dbo].[Rezerwacje_prelekcji] (
    [Id_Rezerwacji_Prelekcji] INT IDENTITY (1, 1) NOT NULL,
    [Id_Uczestnika]           INT NOT NULL,
    [Id_Prelekcji]            INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Rezerwacji_Prelekcji] ASC)
);


GO
PRINT N'Creating [dbo].[Sale]...';


GO
CREATE TABLE [dbo].[Sale] (
    [Id_sali]    INT IDENTITY (1, 1) NOT NULL,
    [Pojemnosc]  INT NOT NULL,
    [Id_Budynku] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_sali] ASC)
);


GO
PRINT N'Creating [dbo].[Uczestnicy]...';


GO
CREATE TABLE [dbo].[Uczestnicy] (
    [Id_Uczestnika]      INT          IDENTITY (1000, 3) NOT NULL,
    [Imie]               VARCHAR (50) NOT NULL,
    [Nazwisko]           VARCHAR (50) NOT NULL,
    [Wiek]               INT          NOT NULL,
    [Nocleg]             BIT          NOT NULL,
    [Email]              VARCHAR (50) NOT NULL,
    [Hasło]              VARCHAR (50) NOT NULL,
    [Nick]               VARCHAR (50) NOT NULL,
    [Telefon_kontaktowy] VARCHAR (9)  NULL,
    [Telefon_opiekuna]   VARCHAR (9)  NULL,
    [Id_Funkcji]         INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Uczestnika] ASC),
    UNIQUE NONCLUSTERED ([Email] ASC)
);


GO
PRINT N'Creating [dbo].[Zgloszenia]...';


GO
CREATE TABLE [dbo].[Zgloszenia] (
    [Id_Zgloszenia] INT           IDENTITY (100, 1) NOT NULL,
    [Temat]         VARCHAR (50)  NOT NULL,
    [Opis]          VARCHAR (250) NOT NULL,
    [Status]        NVARCHAR (50) NOT NULL,
    [Id_Uczestnika] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Zgloszenia] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Zgloszenia]...';


GO
ALTER TABLE [dbo].[Zgloszenia]
    ADD DEFAULT 'Nowe zgłoszenie' FOR [Status];


GO
PRINT N'Creating [dbo].[FK_Bloki_Uczestnicy]...';


GO
ALTER TABLE [dbo].[Bloki] WITH NOCHECK
    ADD CONSTRAINT [FK_Bloki_Uczestnicy] FOREIGN KEY ([Id_Uczestnika]) REFERENCES [dbo].[Uczestnicy] ([Id_Uczestnika]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Prelekcje_Zgloszenia]...';


GO
ALTER TABLE [dbo].[Prelekcje] WITH NOCHECK
    ADD CONSTRAINT [FK_Prelekcje_Zgloszenia] FOREIGN KEY ([Id_Zgloszenia]) REFERENCES [dbo].[Zgloszenia] ([Id_Zgloszenia]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Prelekcje_Sale]...';


GO
ALTER TABLE [dbo].[Prelekcje] WITH NOCHECK
    ADD CONSTRAINT [FK_Prelekcje_Sale] FOREIGN KEY ([Id_Sali]) REFERENCES [dbo].[Sale] ([Id_sali]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Rezerwacje_gier_Gry]...';


GO
ALTER TABLE [dbo].[Rezerwacje_gier] WITH NOCHECK
    ADD CONSTRAINT [FK_Rezerwacje_gier_Gry] FOREIGN KEY ([Id_Gry]) REFERENCES [dbo].[Gry] ([Id_Gry]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Rezerwacje_gier_Uczestnicy]...';


GO
ALTER TABLE [dbo].[Rezerwacje_gier] WITH NOCHECK
    ADD CONSTRAINT [FK_Rezerwacje_gier_Uczestnicy] FOREIGN KEY ([Id_Uczestnika]) REFERENCES [dbo].[Uczestnicy] ([Id_Uczestnika]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Rezerwacje_prelekcji_Uczestnicy]...';


GO
ALTER TABLE [dbo].[Rezerwacje_prelekcji] WITH NOCHECK
    ADD CONSTRAINT [FK_Rezerwacje_prelekcji_Uczestnicy] FOREIGN KEY ([Id_Uczestnika]) REFERENCES [dbo].[Uczestnicy] ([Id_Uczestnika]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Rezerwacje_prelekcji_Prelekcje]...';


GO
ALTER TABLE [dbo].[Rezerwacje_prelekcji] WITH NOCHECK
    ADD CONSTRAINT [FK_Rezerwacje_prelekcji_Prelekcje] FOREIGN KEY ([Id_Prelekcji]) REFERENCES [dbo].[Prelekcje] ([Id_Prelekcji]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Sale_Budynki]...';


GO
ALTER TABLE [dbo].[Sale] WITH NOCHECK
    ADD CONSTRAINT [FK_Sale_Budynki] FOREIGN KEY ([Id_Budynku]) REFERENCES [dbo].[Budynki] ([Id_Budynku]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Uczestnicy_Funkcje]...';


GO
ALTER TABLE [dbo].[Uczestnicy] WITH NOCHECK
    ADD CONSTRAINT [FK_Uczestnicy_Funkcje] FOREIGN KEY ([Id_Funkcji]) REFERENCES [dbo].[Funkcje] ([Id_Funkcji]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Zgloszenia_Uczestnicy]...';


GO
ALTER TABLE [dbo].[Zgloszenia] WITH NOCHECK
    ADD CONSTRAINT [FK_Zgloszenia_Uczestnicy] FOREIGN KEY ([Id_Uczestnika]) REFERENCES [dbo].[Uczestnicy] ([Id_Uczestnika]) ON DELETE CASCADE;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cfe8328e-4891-4b9d-8d42-e11ad5d949b5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cfe8328e-4891-4b9d-8d42-e11ad5d949b5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b497177a-9e5b-4d5f-9a2c-c8be35b1fdf3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b497177a-9e5b-4d5f-9a2c-c8be35b1fdf3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9834d940-7630-46a1-b55c-5fd67e17c012')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9834d940-7630-46a1-b55c-5fd67e17c012')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '772aa945-9dd3-458f-8114-7fe2a311626c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('772aa945-9dd3-458f-8114-7fe2a311626c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '728ad1e8-b6a3-45eb-928b-1c9cc3b062d9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('728ad1e8-b6a3-45eb-928b-1c9cc3b062d9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b81cce38-82e7-48b4-a74d-4278327ecee7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b81cce38-82e7-48b4-a74d-4278327ecee7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '499414c1-00d7-4395-9102-3e50ddf4d08e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('499414c1-00d7-4395-9102-3e50ddf4d08e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3101afc5-0417-4f4c-a47f-13a62dbc7d5c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3101afc5-0417-4f4c-a47f-13a62dbc7d5c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a95cb150-92df-4e7c-82c7-1fd4618c2806')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a95cb150-92df-4e7c-82c7-1fd4618c2806')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b968f77b-e93a-4d72-a663-4395fb5d2130')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b968f77b-e93a-4d72-a663-4395fb5d2130')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3ca30b56-0a58-4df4-a6fc-ffe370c0e1aa')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3ca30b56-0a58-4df4-a6fc-ffe370c0e1aa')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Bloki] WITH CHECK CHECK CONSTRAINT [FK_Bloki_Uczestnicy];

ALTER TABLE [dbo].[Prelekcje] WITH CHECK CHECK CONSTRAINT [FK_Prelekcje_Zgloszenia];

ALTER TABLE [dbo].[Prelekcje] WITH CHECK CHECK CONSTRAINT [FK_Prelekcje_Sale];

ALTER TABLE [dbo].[Rezerwacje_gier] WITH CHECK CHECK CONSTRAINT [FK_Rezerwacje_gier_Gry];

ALTER TABLE [dbo].[Rezerwacje_gier] WITH CHECK CHECK CONSTRAINT [FK_Rezerwacje_gier_Uczestnicy];

ALTER TABLE [dbo].[Rezerwacje_prelekcji] WITH CHECK CHECK CONSTRAINT [FK_Rezerwacje_prelekcji_Uczestnicy];

ALTER TABLE [dbo].[Rezerwacje_prelekcji] WITH CHECK CHECK CONSTRAINT [FK_Rezerwacje_prelekcji_Prelekcje];

ALTER TABLE [dbo].[Sale] WITH CHECK CHECK CONSTRAINT [FK_Sale_Budynki];

ALTER TABLE [dbo].[Uczestnicy] WITH CHECK CHECK CONSTRAINT [FK_Uczestnicy_Funkcje];

ALTER TABLE [dbo].[Zgloszenia] WITH CHECK CHECK CONSTRAINT [FK_Zgloszenia_Uczestnicy];


GO
PRINT N'Update complete.';


GO
